name: Imovirtual CI Pipeline

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'dags/**'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'dags/**'

jobs:
  test-airflow-dag:
    runs-on: ubuntu-latest
    
    env:
      AIRFLOW_HOME: ${GITHUB_WORKSPACE}/airflow
      PYTHONPATH: ${GITHUB_WORKSPACE}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install apache-airflow
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Create Airflow directory structure
        run: |
          mkdir -p ${AIRFLOW_HOME}/dags
          cp -r dags/* ${AIRFLOW_HOME}/dags/

      - name: Initialize Airflow DB
        run: |
          airflow db init
          airflow users create \
            --username admin \
            --firstname admin \
            --lastname admin \
            --role Admin \
            --email admin@example.com \
            --password admin

      - name: Test DAG load
        run: |
          python -c "
          from airflow.models import DagBag
          dag_bag = DagBag(dag_folder='${AIRFLOW_HOME}/dags', include_examples=False)
          if dag_bag.import_errors:
              print('DAG import errors:')
              for filename, errors in dag_bag.import_errors.items():
                  print(f'{filename}: {errors}')
              exit(1)
          else:
              print('DAG validation successful')
              for dag_id in dag_bag.dag_ids:
                  print(f'Found DAG: {dag_id}')
          "

      - name: Test DAG task dependencies
        run: |
          airflow tasks list imovirtual_data_pipeline --tree

      - name: Run DAG with --dry-run
        run: |
          airflow dags test imovirtual_data_pipeline $(date -I)

      - name: Report status
        if: always()
        run: |
          echo "DAG CI pipeline completed"
          if [ $? -eq 0 ]; then
            echo "All tests passed successfully"
          else
            echo "Some tests failed"
            exit 1
          fi